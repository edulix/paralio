#!/usr/bin/env python3
#
# Copyright (C) 2017-2018 Eduardo Robles Elvira <edulix@nvotes.com>
#
# paralio is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License.
#
# paralio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with paralio.  If not, see <http://www.gnu.org/licenses/>.
#

import string
import random
import argparse
import sys

parser = argparse.ArgumentParser(description='generate ballots.')
parser.add_argument('num_voters', metavar='N', type=int,
                    help='num voters to generate')
parser.add_argument('--add-ballot', action='store_true', default=False)

VOTERID_LEN = 28

args = parser.parse_args()

ballot = '''{"issue_date": "now", "proofs": [{"challenge": "34322546695081880053689476958746854103275373293388953393629571172587027900094", "commitment": "31100874394887127987849201068146993924812689751695280555645173848293715072022780725524710517733672881002191527105751370592742858723453729540843164594924489627606815519188625936925484522656428201711204769525334080754586419285349819112036323086155930596647164812533187055508785735904913113619588337583850013146129627596686729851811903712096414503227808168224625544512077454642730468811463785079534389036610457657078007876264755749804235790859576585269848110814850072194420064843500086447992790684261337170020107737448624715613610415272969929559271542155168770440641148897819307594724924333838158572687971629118729168634", "response": "1828219386618732292676904669003870081962704266436634451423752876605875696356864402697482015079827710309787713951454982709379807239319546771127587264273014020716602961897582152123013572389468720204533986148290497480615284367484001777760115394914773865749374602174865859263173511365571955619651013952595437431592097689590380195625629727651076091883773105977083697335127591832197099250410380113155900329767872745188639390020517248960950888621441630741924256538530799942752646225116989729979166536687877961045786229444745572786371075577742637509115126282917665538971271470011422360548250755855186126480346397076476753191"}, {"challenge": "61802244337511133306272176861654162179376424521569876860263020950505651517943", "commitment": "17457772945090191822523221031145501305320036109664950553404790633193543976430805844958034901823911168261465229605549200857781477496764485665960967888443721327035785552542098640629128555980770885946421749134858483567134318071468940201670452635808802526832524990470226777202509710761212390261874004591811962018935692727837446175351746037565179911225420825601981042570833710947199224324681981616391576276041715118816331477074972651106952009489382603610575350889177929936208876143727454444559437931673341151898897624877901404030494644340923402988364255879208734380341629011468408624107423649547839739551500528742172030618", "response": "23709997121694242262551169538123889898285152240619611690023522108698729910178257419804120349483856728186251299173270961511139522226220205482058162801596641882693072310441788629918503461717971421758927154589434994710729285494169396686976253313488601206652463157835919451452289548342389541765316144559686934939067341666258173432766331122907599150704784547020208242693684550032226060179547178114716714801670018456248498008554848668474102646827440591436171827126003523886740414445887950408367066731520431626134834014947238863455537285841456686420901118734988263158401024349062684086247972704281707357284552394481362703829"}, {"challenge": "23012071209039070231748370594648778970585904843984911400175582209050061797435", "commitment": "25916389091329441183119136204777475535173448919914272684557880665997317095888356441026555159939517287296271426797679874651813653988153854537485543694511676628461358157537718432972641021910218073759410601196645409254511652949449181966116398586029583384722238351620523104010469428768719397397808711792379969743405758031144017658878832687599810868051259326130967465759838549350792393800284804779237939275370024588955134180513303478909853840630024223411872555217289737344729698462949267722510864106537446559813461917735482364663137379233963725174967806137094529970528034383650711286288098623369910184531706201626875140467", "response": "19356609556768670925842227650066938957217933004848031002049615397070037640956739021175168168977261152341207714064243397269175149143873425432906120641006489793997000330750685908289227531368616095453975336821743736651428488791112447643890444261455979339266914991620265840624181519887927511137506039013644360563011630456223743932831961655360230929608390446509589562915454364857527036612817779078227551513524178988357871824819974623632494855869053215097935521589315572537069969936112620284972548454443051039766296513635639171207112907461414203772568549181893972337390610934670835875477731771786517414940963137610621031721"}], "choices": [{"alpha": "21274909316081593171113615773649487705330905990483213419888694421646449191137747779346644031141437966516261409055019842455752669755993932172543717268734177758491205126479731888640068076451749043501318417919061067871345825660184193801038541448312775418843103054278032600437290158834345317874583699662567548317012533527111726161454009239746171885792234655751312851391581605385256658882001544303123103142399061003358520645917620234789884745684820592097234946897686919068378815391952935260599964429408340150241306396046057097325893572181071408056636061722682634166244835162287897882389283253417357997338486602575311432374", "beta": "7133656731173801467868011648059091141133489372598336691801941542336168861278687767290635363820039933015621364469964756616248023409511177128565254761749160511627367953837826030112470562597130585739861636678574143088233138851668432043886499003740681460310716505563404563910924409547963611755829680977264742484676524735807645926690762068003908659294939899668869311839411387171612080152404486970356225901974630065131343426129712706201297269763954970483403260469640479994558446442594785093691874202607494256997756207347405514942204936550564150253007935462092701454200092196996157419970446712961809222199828392777466221254"}, {"alpha": "33782446242514443397637162731106412080538276005564808201830809371459623686267060809655276291243241934369424481328089004941916943417492490418065644082207918639255398257531914401504336113387087942519176020914898068647012240548519744002085823088420421947826682945718306200558238511718774070664719260473531029017407162428075923177425918089519070347248229143627629612656214176437715568150494413609575150867237425699895311507532233295911881824362755132151048760606869845850532551466329290378859869186123182365990580398403246714943420009137785491468179879053702578305135226813866355980070367228280850045237821820894070906186", "beta": "17883532395574678942778317739914357181721707315329881645849719321337056579052452949016217559218224926718951607910228723730627198684613101042129185645982305491363717238585523558602985586260999140026877551886167798944244608876036587314762321762186961081707316608217478522708881797688922117074822499471719882213073486998343265491790313516832477476331115103828801755584111063369716607349511169698187002843434342628505959532100208254871686582592940631209351117989793006564704896401453580280755933219406984021645194527510308528324179129025883685121798307263685346157789796385981141366544450339224609889731345440996879937791"}, {"alpha": "41436297043545749480112800200213692198817134946038546646272137142031750475571976746274005434175778093872256314266722837766392043757073206224878812905857390842536303805752393469204850591926791255436702125656939178239251147757099316290926426617802674571494184647677799033797970353501626781262764890700715667404178245828935797665491260913765316230809086300425867849734739546768751114597635117775696313266007663873081282279281328393416612171711876584930495128019030040590925592368793045728183992645410229844923143376300163983917478643150980776524253020567396895335157903169664804746018245497124677608575998155049473651706", "beta": "9035037363681107928265000298908828954560609835275053884429701074311542527285958986146719678435029405584801580499940029019751195148832364942577386136133589641073125636955472131536673596219282135215598474220114640072658979210735780400442270756874959139215149849550772077486287624938712576928386815006356682570169642534242366568247721021645259690277389871515466181033578448036003088954456889047813617962375062772743292751019730617857015770395756406668409618818543378435273849784407295597168733573454707888586383925293566991243514604268777830690796689269573999128957428357699423855290790835138893015980135655158103965384"}]}'''

if args.add_ballot:
  for i in range(args.num_voters):
    print(
      ''.join(random.choice(string.ascii_lowercase + string.digits) for _ in range(VOTERID_LEN))
      + "|" + ballot
    )
else:
  for i in range(args.num_voters):
    print(
      ''.join(random.choice(string.ascii_lowercase + string.digits) for _ in range(VOTERID_LEN))
    )
